[{"C:\\Users\\USER\\Desktop\\eshop\\eshop\\src\\index.js":"1","C:\\Users\\USER\\Desktop\\eshop\\eshop\\src\\App.js":"2","C:\\Users\\USER\\Desktop\\eshop\\eshop\\src\\reportWebVitals.js":"3","C:\\Users\\USER\\Desktop\\eshop\\eshop\\src\\components\\Nav.js":"4","C:\\Users\\USER\\Desktop\\eshop\\eshop\\src\\components\\Home.js":"5","C:\\Users\\USER\\Desktop\\eshop\\eshop\\src\\components\\Header.js":"6","C:\\Users\\USER\\Desktop\\eshop\\eshop\\src\\components\\Cart.js":"7","C:\\Users\\USER\\Desktop\\eshop\\eshop\\src\\store\\index.js":"8","C:\\Users\\USER\\Desktop\\eshop\\eshop\\src\\store\\reducers\\ProductReducer.js":"9","C:\\Users\\USER\\Desktop\\eshop\\eshop\\src\\components\\Details.js":"10","C:\\Users\\USER\\Desktop\\eshop\\eshop\\src\\store\\reducers\\CartReducer.js":"11"},{"size":267,"mtime":1610437479270,"results":"12","hashOfConfig":"13"},{"size":623,"mtime":1615122868073,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"13"},{"size":1168,"mtime":1615123581268,"results":"16","hashOfConfig":"13"},{"size":2348,"mtime":1615123019120,"results":"17","hashOfConfig":"13"},{"size":172,"mtime":1610440703485,"results":"18","hashOfConfig":"13"},{"size":7118,"mtime":1615197482445,"results":"19","hashOfConfig":"13"},{"size":380,"mtime":1610624985422,"results":"20","hashOfConfig":"13"},{"size":4226,"mtime":1610526456587,"results":"21","hashOfConfig":"13"},{"size":2818,"mtime":1615197252659,"results":"22","hashOfConfig":"13"},{"size":2514,"mtime":1615132586101,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"gixggz",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"C:\\Users\\USER\\Desktop\\eshop\\eshop\\src\\index.js",[],["50","51"],"C:\\Users\\USER\\Desktop\\eshop\\eshop\\src\\App.js",[],"C:\\Users\\USER\\Desktop\\eshop\\eshop\\src\\reportWebVitals.js",[],"C:\\Users\\USER\\Desktop\\eshop\\eshop\\src\\components\\Nav.js",[],"C:\\Users\\USER\\Desktop\\eshop\\eshop\\src\\components\\Home.js",[],"C:\\Users\\USER\\Desktop\\eshop\\eshop\\src\\components\\Header.js",[],"C:\\Users\\USER\\Desktop\\eshop\\eshop\\src\\components\\Cart.js",["52","53","54"],"import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport currencyFormatter from \"currency-formatter\";\r\nimport { BsFillSkipStartFill, BsFillSkipEndFill, BsFillXCircleFill } from \"react-icons/bs\";\r\nimport StripeCheckout from 'react-stripe-checkout';\r\nimport axios from \"axios\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\ntoast.configure();\r\n\r\n\r\n\r\nconst Cart = (props) => {\r\n\r\n    const { products, totalQuantities, totalPrice } = useSelector(state => state.CartReducer);\r\n    const dispatch = useDispatch();\r\n    const handleToken = async (token) => {\r\n        const product = { name: 'All Product', price: totalPrice }\r\n        const response = await axios.post(\"http://localhost:8080/checkout\", {\r\n            product,\r\n            token\r\n        });\r\n        const { status } = response.data;\r\n        if (status === \"success\") {\r\n            dispatch({ type: 'EMPTY' })\r\n            props.history.push('/');\r\n            toast.success(\"thanks for using our shoping portal\", {position: toast.POSITION.TOP_RIGHT});\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"cart\">\r\n\r\n            {products.length > 0 ? <>\r\n                <div className=\"row\">\r\n                    <div className=\"col-9\">\r\n                        <div className=\"\">\r\n                            <div className=\"row cart__heading\" >\r\n                                <div className=\"col-2\">\r\n                                    picture\r\n                            </div>\r\n                                <div className=\"col-2\">\r\n                                    name\r\n                            </div>\r\n                                <div className=\"col-2\">\r\n                                    price\r\n                            </div>\r\n                                <div className=\"col-2\">\r\n                                    inc/dec\r\n                            </div>\r\n                                <div className=\"col-2\">\r\n                                    total price\r\n                            </div>\r\n                                <div className=\"col-2\">\r\n                                    remove\r\n                            </div>\r\n                            </div>\r\n                            {products.map(product => (\r\n                                <div className=\"row verticalAllign summary__details\" key={product.id}>\r\n                                    <div className=\"col-2\">\r\n                                        <div className=\"cart__image\">\r\n                                            <img src={`/images/${product.image}`} />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-2\">\r\n                                        <div className=\"cart__name\">\r\n                                            {product.name}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-2\">\r\n                                        <div className=\"cart__price\">\r\n                                            {currencyFormatter.format(product.discountPrice, { code: 'INR' })}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-2\">\r\n                                        <div className=\"details__incDec\">\r\n                                            <span className=\"dec\" onClick={() => dispatch({ type: 'DEC', payload: product.id })}><BsFillSkipStartFill /></span>\r\n                                            <span className=\"quantity\">{product.quantity}</span>\r\n                                            <span className=\"inc\" onClick={() => dispatch({ type: 'INC', payload: product.id })}><BsFillSkipEndFill /></span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-2\">\r\n                                        <div className=\"cart__total text__center\">\r\n                                            {currencyFormatter.format((product.discountPrice * product.quantity), { code: 'INR' })}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-2\">\r\n                                        <div className=\"cart__remove\" onClick={() => dispatch({ type: 'REMOVE', payload: product.id })}>\r\n                                            <BsFillXCircleFill />\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            ))}\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"col-3 summary-col\">\r\n                        <div className=\"summary\">\r\n                            <div className=\"summary__heading\">\r\n                                Summary\r\n                            </div>\r\n                            <div className=\"summary__details\">\r\n                                <div className=\"row mb-10\">\r\n                                    <div className=\"col-6\">\r\n                                        Total Items:\r\n                                    </div>\r\n                                    <div className=\"col-6\">{totalQuantities}</div>\r\n                                </div>\r\n                                <div className=\"row mb-10\">\r\n                                    <div className=\"col-6\">\r\n                                        Total Price\r\n                                    </div>\r\n                                    <div className=\"col-6\">\r\n                                        {currencyFormatter.format(totalPrice, { code: 'INR' })}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"stripe_section\">\r\n                                    <StripeCheckout\r\n                                        className=\"checkout\"\r\n                                        stripeKey=\"pk_test_51ISMpaDeuELIrjv1F9lpjrT1SIcRH1euf6BVnyf9GPNW3Ta0ad6OYXh0LcBOZX0nnZ3jrSNTI2EHt2t8UkL5QnuD00mjSNG2ki\"\r\n                                        token={handleToken}\r\n                                        billingAddress\r\n                                        shippingAddress\r\n                                        amount={totalPrice * 100}\r\n                                        name=\"All Product\">\r\n\r\n                                    </StripeCheckout>\r\n\r\n                                </div>\r\n\r\n                                {/* <button type=\"button\" className=\"checkout\">Checkout</button> */}\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </> : <div className=\"checkout1\"><h1>Your Cart is Empty</h1> </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cart\r\n","C:\\Users\\USER\\Desktop\\eshop\\eshop\\src\\store\\index.js",[],"C:\\Users\\USER\\Desktop\\eshop\\eshop\\src\\store\\reducers\\ProductReducer.js",[],["55","56"],"C:\\Users\\USER\\Desktop\\eshop\\eshop\\src\\components\\Details.js",["57"],"import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport currencyFormatter from \"currency-formatter\";\r\nimport { BsFillSkipStartFill, BsFillSkipEndFill } from \"react-icons/bs\";\r\n\r\n\r\n\r\nconst Details = () => {\r\n    const [quantity, setQuantity] = useState(1)\r\n\r\n    const { id } = useParams();\r\n    // console.log(id)\r\n    const dispatch = useDispatch();\r\n    const { product } = useSelector(state => state.ProductReducer);\r\n    useEffect(() => {\r\n        dispatch({ type: \"PRODUCT\", id })\r\n    }, [id])\r\n\r\nconst decQuantity = ()=>{\r\n    if(quantity>1){\r\n        setQuantity(quantity-1)\r\n    }\r\n}\r\nconst incQuantity = ()=>{\r\n    if(quantity<5){\r\n        setQuantity(quantity+1)\r\n    }\r\n    else{\r\n        alert(\"only 5 product\")\r\n    }\r\n}\r\n    return (\r\n        <>\r\n            <div className=\"container mt-100\">\r\n                <div className=\"row\">\r\n                    {/* <div className=\"col-3\" >\r\n                    </div> */}\r\n                    <div className=\"col-6\">\r\n                        <div className=\"details__image\">\r\n                            <img src={`/images/${product.image}`} alt={product.name} />\r\n                           \r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                       <div className=\"details__name\">\r\n                         {product.name}\r\n                       </div>\r\n                       <div className=\"details__price\">\r\n                         <span className=\"details__actual\">\r\n                         {currencyFormatter.format(product.price, { code: 'INR' })}\r\n                         </span>\r\n                         <span className=\"details__discount\">\r\n                         {currencyFormatter.format(product.discountPrice, { code: 'INR' })}\r\n                         </span>\r\n                         <div className=\"details__p\">{product.desc}</div>\r\n\r\n                       </div>\r\n                      \r\n                       <div className=\"details__info\">\r\n                          \r\n                           <div className=\"details__incDec\">\r\n                           <span className=\"dec\"onClick={decQuantity}><BsFillSkipStartFill/></span>\r\n                           <span className=\"quantity\">{quantity}</span>\r\n                           <span className=\"inc\" onClick={incQuantity}><BsFillSkipEndFill/></span>\r\n                           <button className=\"btn-default\" onClick ={()=>dispatch({type: 'ADD_TO_CART', payload: {product, quantity}})} >Add to Cart</button>\r\n                           </div>\r\n\r\n                       </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Details\r\n","C:\\Users\\USER\\Desktop\\eshop\\eshop\\src\\store\\reducers\\CartReducer.js",[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":1,"column":17,"nodeType":"64","messageId":"65","endLine":1,"endColumn":25},{"ruleId":"62","severity":1,"message":"66","line":7,"column":10,"nodeType":"64","messageId":"65","endLine":7,"endColumn":24},{"ruleId":"67","severity":1,"message":"68","line":64,"column":45,"nodeType":"69","endLine":64,"endColumn":85},{"ruleId":"58","replacedBy":"70"},{"ruleId":"60","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":18,"column":8,"nodeType":"74","endLine":18,"endColumn":12,"suggestions":"75"},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'ToastContainer' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["76"],["77"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["78"],"no-global-assign","no-unsafe-negation",{"desc":"79","fix":"80"},"Update the dependencies array to be: [dispatch, id]",{"range":"81","text":"82"},[602,606],"[dispatch, id]"]